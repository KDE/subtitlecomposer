language: cpp

branches:
  except:
    - /^(?i:testing-)/
    - /^(?i:continuous)/
    - l10n_master

env:
  global:
    - RELEASE_BRANCH="master"

matrix:
  include:
    - name: "Ubuntu 18.04 Bionic - CLang"
      os: linux
      dist: bionic
      sudo: required
      compiler: clang
      before_install: |-
        sudo apt-get update -qq
      install:
        - |- # dependencies
         sudo apt-get install -yqq curl cmake make extra-cmake-modules kross-dev libavformat-dev libswscale-dev libopenal-dev breeze \
                                  qtbase5-dev qtbase5-private-dev libkf5auth-dev libkf5codecs-dev libkf5config-dev libkf5configwidgets-dev \
                                  libkf5coreaddons-dev libkf5i18n-dev libkf5kio-dev kross-dev libkf5sonnet-dev libkf5textwidgets-dev \
                                  libkf5widgetsaddons-dev libkf5xmlgui-dev libicu-dev libsphinxbase-dev libpocketsphinx-dev
      script:
        - |-
          mkdir build && cd build
          cmake \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DKDE_INSTALL_LIBDIR=lib \
            -DKDE_INSTALL_USE_QT_SYS_PATHS=ON \
            .. || exit 1
          make -j$(nproc) || exit 1
          make test || (cat Testing/Temporary/LastTest.log ; exit 1) || exit 1

    - name: "Ubuntu 18.04 Bionic - GCC"
      os: linux
      dist: bionic
      sudo: required
      compiler: gcc
      before_install: |-
        sudo apt-get update -qq
      install:
        - |- # dependencies
         sudo apt-get install -yqq curl cmake make extra-cmake-modules kross-dev libavformat-dev libswscale-dev libopenal-dev breeze \
                                  qtbase5-dev qtbase5-private-dev libkf5auth-dev libkf5codecs-dev libkf5config-dev libkf5configwidgets-dev \
                                  libkf5coreaddons-dev libkf5i18n-dev libkf5kio-dev kross-dev libkf5sonnet-dev libkf5textwidgets-dev \
                                  libkf5widgetsaddons-dev libkf5xmlgui-dev libicu-dev libsphinxbase-dev libpocketsphinx-dev
      script:
        - |-
          mkdir build && cd build
          cmake \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DKDE_INSTALL_LIBDIR=lib \
            -DKDE_INSTALL_USE_QT_SYS_PATHS=ON \
            .. || exit 1
          make -j$(nproc) || exit 1
          make test || (cat Testing/Temporary/LastTest.log ; exit 1) || exit 1

    - name: "Ubuntu 20.04 Focal - CLang"
      os: linux
      dist: focal
      sudo: required
      compiler: clang
      sources:
        - sourceline: universe
        - sourceline: restricted
        - sourceline: multiverse
      before_install: |-
        sudo apt-get update -qq
      install:
        - |- # dependencies
         sudo apt-get install -yq curl cmake make extra-cmake-modules kross-dev libavformat-dev libswscale-dev libopenal-dev breeze \
                                  qtbase5-dev qtbase5-private-dev libkf5auth-dev libkf5codecs-dev libkf5config-dev libkf5configwidgets-dev \
                                  libkf5coreaddons-dev libkf5i18n-dev libkf5kio-dev kross-dev libkf5sonnet-dev libkf5textwidgets-dev \
                                  libkf5widgetsaddons-dev libkf5xmlgui-dev libicu-dev libsphinxbase-dev libpocketsphinx-dev
      script:
        - |-
          mkdir build && cd build
          cmake \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DKDE_INSTALL_LIBDIR=lib \
            -DKDE_INSTALL_USE_QT_SYS_PATHS=ON \
            .. || exit 1
          make -j$(nproc) || exit 1
          make test || (cat Testing/Temporary/LastTest.log ; exit 1) || exit 1

    - name: "Ubuntu 20.04 Focal - GCC"
      os: linux
      dist: focal
      sudo: required
      compiler: gcc
      sources:
        - sourceline: universe
        - sourceline: restricted
        - sourceline: multiverse
      before_install: |-
        sudo apt-get update -qq
      install:
        - |- # dependencies
         sudo apt-get install -yq curl cmake make extra-cmake-modules kross-dev libavformat-dev libswscale-dev libopenal-dev breeze \
                                  qtbase5-dev qtbase5-private-dev libkf5auth-dev libkf5codecs-dev libkf5config-dev libkf5configwidgets-dev \
                                  libkf5coreaddons-dev libkf5i18n-dev libkf5kio-dev kross-dev libkf5sonnet-dev libkf5textwidgets-dev \
                                  libkf5widgetsaddons-dev libkf5xmlgui-dev libicu-dev libsphinxbase-dev libpocketsphinx-dev
      script:
        - |-
          mkdir build && cd build
          cmake \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DKDE_INSTALL_LIBDIR=lib \
            -DKDE_INSTALL_USE_QT_SYS_PATHS=ON \
            .. || exit 1
          make -j$(nproc) || exit 1
          make test || (cat Testing/Temporary/LastTest.log ; exit 1) || exit 1
